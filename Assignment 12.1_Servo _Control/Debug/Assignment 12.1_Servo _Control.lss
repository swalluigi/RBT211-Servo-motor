
Assignment 12.1_Servo _Control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000a0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000f4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000124  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005de  00000000  00000000  00000180  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004dc  00000000  00000000  0000075e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000272  00000000  00000000  00000c3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000eac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000036f  00000000  00000000  00000ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d8  00000000  00000000  0000123f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001317  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	15 c0       	rjmp	.+42     	; 0x2e <__bad_interrupt>
   4:	14 c0       	rjmp	.+40     	; 0x2e <__bad_interrupt>
   6:	13 c0       	rjmp	.+38     	; 0x2e <__bad_interrupt>
   8:	12 c0       	rjmp	.+36     	; 0x2e <__bad_interrupt>
   a:	11 c0       	rjmp	.+34     	; 0x2e <__bad_interrupt>
   c:	10 c0       	rjmp	.+32     	; 0x2e <__bad_interrupt>
   e:	0f c0       	rjmp	.+30     	; 0x2e <__bad_interrupt>
  10:	0e c0       	rjmp	.+28     	; 0x2e <__bad_interrupt>
  12:	0d c0       	rjmp	.+26     	; 0x2e <__bad_interrupt>
  14:	0c c0       	rjmp	.+24     	; 0x2e <__bad_interrupt>
  16:	0b c0       	rjmp	.+22     	; 0x2e <__bad_interrupt>
  18:	0a c0       	rjmp	.+20     	; 0x2e <__bad_interrupt>
  1a:	09 c0       	rjmp	.+18     	; 0x2e <__bad_interrupt>
  1c:	08 c0       	rjmp	.+16     	; 0x2e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	02 d0       	rcall	.+4      	; 0x30 <main>
  2c:	37 c0       	rjmp	.+110    	; 0x9c <_exit>

0000002e <__bad_interrupt>:
  2e:	e8 cf       	rjmp	.-48     	; 0x0 <__vectors>

00000030 <main>:
int main(void)
{

	
	//TIMSK1 |= (1 << TOIE1) | (1 << OCIE1A);
	OCR1C = TOP_VALUE;
  30:	88 e1       	ldi	r24, 0x18	; 24
  32:	8d bd       	out	0x2d, r24	; 45
	TCCR1 |= (0 << COM1A1) | (1 << COM1A0) | (1 << CS13) | (1 << CS12) | (0 << CS11) | (1 << CS10) | (1 << CTC1);  // CS13, CS12, CS11, and CS10 are set to (1,1,0,1), which set the prescaler to 4096
  34:	80 b7       	in	r24, 0x30	; 48
  36:	8d 69       	ori	r24, 0x9D	; 157
  38:	80 bf       	out	0x30, r24	; 48
	
	DDRB |= (1 << PB1);
  3a:	87 b3       	in	r24, 0x17	; 23
  3c:	82 60       	ori	r24, 0x02	; 2
  3e:	87 bb       	out	0x17, r24	; 23

	OCR1A = PULSE_MIN;
  40:	8c e0       	ldi	r24, 0x0C	; 12
  42:	8e bd       	out	0x2e, r24	; 46
// 			OCR1A = i;
// 			_delay_ms(10);
// 			
// 		}
// 		
		OCR1A = PULSE_MIN;
  44:	8c e0       	ldi	r24, 0x0C	; 12
  46:	8e bd       	out	0x2e, r24	; 46
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  48:	2f e9       	ldi	r18, 0x9F	; 159
  4a:	36 e8       	ldi	r19, 0x86	; 134
  4c:	81 e0       	ldi	r24, 0x01	; 1
  4e:	21 50       	subi	r18, 0x01	; 1
  50:	30 40       	sbci	r19, 0x00	; 0
  52:	80 40       	sbci	r24, 0x00	; 0
  54:	e1 f7       	brne	.-8      	; 0x4e <__SREG__+0xf>
  56:	00 c0       	rjmp	.+0      	; 0x58 <__SREG__+0x19>
  58:	00 00       	nop
		_delay_ms(500);
		OCR1A = PULSE_MID;
  5a:	82 e1       	ldi	r24, 0x12	; 18
  5c:	8e bd       	out	0x2e, r24	; 46
  5e:	9f e9       	ldi	r25, 0x9F	; 159
  60:	26 e8       	ldi	r18, 0x86	; 134
  62:	31 e0       	ldi	r19, 0x01	; 1
  64:	91 50       	subi	r25, 0x01	; 1
  66:	20 40       	sbci	r18, 0x00	; 0
  68:	30 40       	sbci	r19, 0x00	; 0
  6a:	e1 f7       	brne	.-8      	; 0x64 <__SREG__+0x25>
  6c:	00 c0       	rjmp	.+0      	; 0x6e <__SREG__+0x2f>
  6e:	00 00       	nop
		_delay_ms(500);
		OCR1A = PULSE_MAX;
  70:	98 e1       	ldi	r25, 0x18	; 24
  72:	9e bd       	out	0x2e, r25	; 46
  74:	9f e9       	ldi	r25, 0x9F	; 159
  76:	26 e8       	ldi	r18, 0x86	; 134
  78:	31 e0       	ldi	r19, 0x01	; 1
  7a:	91 50       	subi	r25, 0x01	; 1
  7c:	20 40       	sbci	r18, 0x00	; 0
  7e:	30 40       	sbci	r19, 0x00	; 0
  80:	e1 f7       	brne	.-8      	; 0x7a <__SREG__+0x3b>
  82:	00 c0       	rjmp	.+0      	; 0x84 <__SREG__+0x45>
  84:	00 00       	nop
		_delay_ms(500);
		OCR1A = PULSE_MID;
  86:	8e bd       	out	0x2e, r24	; 46
  88:	8f e9       	ldi	r24, 0x9F	; 159
  8a:	96 e8       	ldi	r25, 0x86	; 134
  8c:	21 e0       	ldi	r18, 0x01	; 1
  8e:	81 50       	subi	r24, 0x01	; 1
  90:	90 40       	sbci	r25, 0x00	; 0
  92:	20 40       	sbci	r18, 0x00	; 0
  94:	e1 f7       	brne	.-8      	; 0x8e <__SREG__+0x4f>
  96:	00 c0       	rjmp	.+0      	; 0x98 <__SREG__+0x59>
  98:	00 00       	nop
  9a:	d4 cf       	rjmp	.-88     	; 0x44 <__SREG__+0x5>

0000009c <_exit>:
  9c:	f8 94       	cli

0000009e <__stop_program>:
  9e:	ff cf       	rjmp	.-2      	; 0x9e <__stop_program>
